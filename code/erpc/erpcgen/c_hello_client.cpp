/* 定义项目名称,也是所有生成的源码文件名前缀 */

/*
 * Generated by erpcgen 1.13.0 on Mon Feb 10 20:01:52 2025.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#include "c_hello_client.h"
#include "hello_client.hpp"
#include "erpc_manually_constructed.hpp"

using namespace erpc;
using namespace std;
using namespace erpcShim;


#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
DEMO_client *s_DEMO_client = nullptr;
#else
ERPC_MANUALLY_CONSTRUCTED_STATIC(DEMO_client, s_DEMO_client);
#endif

void hello_world(void)
{
    s_DEMO_client->hello_world();
}

void say_message(const char * msg)
{
    s_DEMO_client->say_message(msg);
}

int32_t erpc_add(int32_t data1, int32_t data2)
{
    int32_t result;
    result = s_DEMO_client->erpc_add(data1, data2);

    return result;
}

void initDEMO_client(erpc_client_t client)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    erpc_assert(s_DEMO_client == nullptr);
    s_DEMO_client = new DEMO_client(reinterpret_cast<ClientManager *>(client));
#else
    erpc_assert(!s_DEMO_client.isUsed());
    s_DEMO_client.construct(reinterpret_cast<ClientManager *>(client));
#endif
}

void deinitDEMO_client(void)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    if (s_DEMO_client != nullptr)
    {
        delete s_DEMO_client;
        s_DEMO_client = nullptr;
    }
#else
    s_DEMO_client.destroy();
#endif
}
